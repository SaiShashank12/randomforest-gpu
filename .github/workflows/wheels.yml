name: Build wheels

on:
  # Disabled automatic builds - build wheels manually or on release
  # push:
  #   branches: [main, develop]
  # pull_request:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.python }}-${{ matrix.platform[1] }}
    runs-on: ${{ matrix.platform[0] }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - [ubuntu-22.04, manylinux, x86_64]
          - [macos-13, macosx, x86_64]
          - [macos-14, macosx, arm64]
          - [windows-2019, win, AMD64]
        python:
          - cp39
          - cp310
          - cp311
          - cp312

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      # Windows requires explicit Fortran setup
      - name: Setup Fortran (Windows)
        if: runner.os == 'Windows'
        uses: awvwgk/setup-fortran@v1
        with:
          compiler: gcc
          version: 13

      # macOS gfortran setup
      - name: Setup Fortran (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install gcc@13
          echo "FC=gfortran-13" >> $GITHUB_ENV

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.platform[1] }}_${{ matrix.platform[2] }}
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform[1] }}-${{ matrix.python }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build dependencies
        run: |
          python -m pip install build

      - name: Build sdist
        run: python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          # Uncomment to test with TestPyPI first:
          # repository-url: https://test.pypi.org/legacy/
          # password: ${{ secrets.TEST_PYPI_API_TOKEN }}
