name: Build GPU Wheels (NVFORTRAN)

on:
  push:
    branches: [main]
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build_gpu_wheels:
    name: Build GPU wheel for Python ${{ matrix.python-version }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install NVIDIA HPC SDK
        run: |
          curl https://developer.download.nvidia.com/hpc-sdk/ubuntu/DEB-GPG-KEY-NVIDIA-HPC-SDK | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-hpcsdk-archive-keyring.gpg
          echo 'deb [signed-by=/usr/share/keyrings/nvidia-hpcsdk-archive-keyring.gpg] https://developer.download.nvidia.com/hpc-sdk/ubuntu/amd64 /' | sudo tee /etc/apt/sources.list.d/nvhpc.list
          sudo apt-get update -y
          sudo apt-get install -y nvhpc-23-11

      - name: Setup NVHPC environment
        run: |
          echo "NVARCH=`uname -s`_`uname -m`" >> $GITHUB_ENV
          echo "NVCOMPILERS=/opt/nvidia/hpc_sdk" >> $GITHUB_ENV
          echo "/opt/nvidia/hpc_sdk/Linux_x86_64/23.11/compilers/bin" >> $GITHUB_PATH
          echo "PATH=/opt/nvidia/hpc_sdk/Linux_x86_64/23.11/compilers/bin:$PATH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/opt/nvidia/hpc_sdk/Linux_x86_64/23.11/compilers/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Verify nvfortran
        run: |
          which nvfortran
          nvfortran --version

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel meson-python meson ninja numpy

      - name: Build GPU wheel
        env:
          FC: nvfortran
        run: |
          python -m build --wheel

      - name: List built wheels
        run: |
          ls -lh dist/*.whl
          echo "GPU wheel built with nvfortran + OpenACC"

      - name: Upload GPU wheels
        uses: actions/upload-artifact@v4
        with:
          name: gpu-wheel-py${{ matrix.python-version }}
          path: dist/*.whl
          retention-days: 90

  collect_gpu_wheels:
    name: Upload GPU wheels to Release
    needs: build_gpu_wheels
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Download all GPU wheels
        uses: actions/download-artifact@v4
        with:
          pattern: gpu-wheel-*
          merge-multiple: true
          path: gpu-wheelhouse

      - name: Display structure
        run: ls -lh gpu-wheelhouse

      - name: Get version
        id: get_version
        run: |
          VERSION=$(grep "version = " pyproject.toml | head -1 | cut -d'"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Rename wheels with GPU suffix for release
        run: |
          cd gpu-wheelhouse
          for wheel in *.whl; do
            # Insert -gpu before version number
            new_name=$(echo $wheel | sed 's/-\([0-9]\)/-gpu-\1/')
            mv "$wheel" "$new_name"
            echo "Renamed: $wheel -> $new_name"
          done

      - name: Upload GPU wheels to release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          TAG="v${VERSION}"

          # Create release if it doesn't exist, otherwise upload to existing
          if ! gh release view "$TAG" > /dev/null 2>&1; then
            echo "Creating release $TAG"
            gh release create "$TAG" \
              --title "Random Forest GPU v${VERSION}" \
              --notes "GPU-accelerated Random Forest with OpenACC support.

          **GPU Wheels:**
          Built with NVIDIA HPC SDK nvfortran compiler for GPU acceleration.
          Requires NVIDIA GPU with CUDA 12.3+.

          **Installation:**
          \`\`\`bash
          pip install https://github.com/SaiShashank12/randomforest-gpu/releases/download/${TAG}/randomforest_gpu-gpu-${VERSION}-cp312-cp312-linux_x86_64.whl
          \`\`\`" \
              gpu-wheelhouse/*.whl
          else
            echo "Uploading to existing release $TAG"
            gh release upload "$TAG" gpu-wheelhouse/*.whl --clobber
          fi
