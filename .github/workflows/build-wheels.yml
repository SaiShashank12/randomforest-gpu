name: Build CPU Wheels

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        python-version: ['3.12']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Setup Fortran compiler - use setup-fortran for all platforms
      - name: Setup Fortran
        uses: fortran-lang/setup-fortran@v1
        with:
          compiler: gcc
          version: 13

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel meson-python meson ninja numpy pytest

      - name: Verify Fortran compiler
        run: |
          which gfortran || echo "gfortran not in PATH"
          gfortran --version || echo "gfortran not working"

      - name: Build wheel
        run: |
          python -m build --wheel

      - name: Test CPU wheel loads correctly
        run: |
          pip install dist/*.whl
          python -c "from randomforest_gpu import RandomForestClassifier; print('✓ CPU wheel imports successfully')"
          pytest tests/test_wheel_loading.py -v
          echo "✓ CPU wheel validated"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*.whl
          retention-days: 30

  # Create a release with all wheels
  create-release:
    name: Create Release with Wheels
    needs: build_wheels
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          pattern: wheel-*
          merge-multiple: true
          path: wheelhouse

      - name: Display structure of downloaded files
        run: ls -R wheelhouse

      - name: Get version
        id: get_version
        run: |
          VERSION=$(grep "version = " pyproject.toml | head -1 | cut -d'"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Create/Update Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          TAG="v${VERSION}"

          # Delete existing release if it exists
          gh release delete "$TAG" -y 2>/dev/null || true

          # Create new release
          gh release create "$TAG" \
            --title "Random Forest GPU v${VERSION}" \
            --notes "CPU wheels built with gfortran for Linux, macOS, and Windows.

          **Installation:**
          Download the appropriate wheel for your platform and Python version, then:
          \`\`\`bash
          pip install randomforest_gpu-${VERSION}-cpXXX-cpXXX-PLATFORM.whl
          \`\`\`

          Or install directly from URL:
          \`\`\`bash
          pip install https://github.com/SaiShashank12/randomforest-gpu/releases/download/${TAG}/randomforest_gpu-${VERSION}-cp312-cp312-linux_x86_64.whl
          \`\`\`

          **GPU Support:**
          These are CPU-only wheels. For GPU support, compile from source with nvfortran:
          \`\`\`bash
          FC=nvfortran pip install git+https://github.com/SaiShashank12/randomforest-gpu.git
          \`\`\`" \
            wheelhouse/*.whl
