name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:

jobs:
  test:
    name: Test on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Fortran compiler
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gfortran

      - name: Install Fortran compiler (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install gcc

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install meson ninja meson-python
          pip install numpy pytest pytest-cov scikit-learn

      - name: Build and install package
        run: |
          pip install -e . --no-build-isolation -v

      - name: Run tests
        run: |
          pytest tests/ -v --cov=randomforest_gpu --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        with:
          files: ./coverage.xml
          flags: unittests
